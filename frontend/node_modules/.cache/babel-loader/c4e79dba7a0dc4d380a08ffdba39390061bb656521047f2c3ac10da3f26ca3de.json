{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add request interceptor for authentication\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// API methods\nexport const itemService = {\n  getAll: () => apiClient.get('items/'),\n  getById: id => apiClient.get(`items/${id}/`),\n  create: data => apiClient.post('items/', data),\n  update: (id, data) => apiClient.put(`items/${id}/`, data),\n  delete: id => apiClient.delete(`items/${id}/`)\n};\nexport const authService = {\n  login: credentials => apiClient.post('token/', credentials),\n  register: userData => apiClient.post('register/', userData),\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","itemService","getAll","get","getById","id","data","post","update","put","delete","authService","login","credentials","register","userData","logout","removeItem"],"sources":["/Users/omar/Documents/ING-3-D/Django/django-react-project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api/';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Add request interceptor for authentication\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// API methods\nexport const itemService = {\n  getAll: () => apiClient.get('items/'),\n  getById: (id) => apiClient.get(`items/${id}/`),\n  create: (data) => apiClient.post('items/', data),\n  update: (id, data) => apiClient.put(`items/${id}/`, data),\n  delete: (id) => apiClient.delete(`items/${id}/`),\n};\n\nexport const authService = {\n  login: (credentials) => apiClient.post('token/', credentials),\n  register: (userData) => apiClient.post('register/', userData),\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n};\n\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;;AAE5C;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAMjB,SAAS,CAACkB,GAAG,CAAC,QAAQ,CAAC;EACrCC,OAAO,EAAGC,EAAE,IAAKpB,SAAS,CAACkB,GAAG,CAAC,SAASE,EAAE,GAAG,CAAC;EAC9CnB,MAAM,EAAGoB,IAAI,IAAKrB,SAAS,CAACsB,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EAChDE,MAAM,EAAEA,CAACH,EAAE,EAAEC,IAAI,KAAKrB,SAAS,CAACwB,GAAG,CAAC,SAASJ,EAAE,GAAG,EAAEC,IAAI,CAAC;EACzDI,MAAM,EAAGL,EAAE,IAAKpB,SAAS,CAACyB,MAAM,CAAC,SAASL,EAAE,GAAG;AACjD,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAK5B,SAAS,CAACsB,IAAI,CAAC,QAAQ,EAAEM,WAAW,CAAC;EAC7DC,QAAQ,EAAGC,QAAQ,IAAK9B,SAAS,CAACsB,IAAI,CAAC,WAAW,EAAEQ,QAAQ,CAAC;EAC7DC,MAAM,EAAEA,CAAA,KAAM;IACZrB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;EAClC;AACF,CAAC;AAED,eAAehC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}